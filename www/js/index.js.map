{"version":3,"sources":["webpack:///webpack/bootstrap cf81c8637e9a6aab8637","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/generator.js","webpack:///./js/core/sudoku.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA,mC;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,E;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,+BAA8B,YAAY;AAC1C;AACA,IAAG;;AAEH;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;AC/EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4B;;;;;;AC9DA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cf81c8637e9a6aab8637","const Grid = require('./ui/grid');\r\n\r\nnew Grid($('#container')).build();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","const Toolkit = require('../core/toolkit');\r\nconst Generate = require('../core/generator');\r\nconst Sudoku = require('../core/sudoku');\r\nmodule.exports = class Grid {\r\n  constructor(container) {\r\n    this._$container = container;\r\n  }\r\n  build() {\r\n    const sudoku = new Sudoku();\r\n    sudoku.make();\r\n    const matrix = sudoku.puzzleMatrix;\r\n    const rowGroupClasses = ['row_g_top', 'row_g_middle', 'row_g_bottom'];\r\n    const colGroupClasses = ['col_g_left', 'col_g_center', 'col_g_right'];\r\n\r\n    const $cells = matrix.map(rowValues => rowValues.map((cellValue, cellIndex) => {\r\n      return $('<span>')\r\n        .addClass('lat')\r\n        .addClass(cellValue === 0 ? 'empty' : '')\r\n        .addClass(colGroupClasses[cellIndex % 3])\r\n        .text(cellValue);\r\n    }));\r\n\r\n    const $divArrays = $cells.map(($spanArray, rowIndex) => {\r\n      return $('<div>')\r\n        .addClass('column')\r\n        .addClass(rowGroupClasses[rowIndex % 3])\r\n        .append($spanArray);\r\n    });\r\n    this._$container.append($divArrays);\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","// 宫坐标系工具\r\nconst boxToolit = {\r\n  converToBoxIndex(rowIndex, colIndex) {\r\n    return {\r\n      boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\r\n      cellIndex: rowIndex % 3 * 3 + colIndex % 3,\r\n    }\r\n  },\r\n\r\n  convertFromBoxIndex(boxIndex, cellIndex) {\r\n    return {\r\n      rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\r\n      colIndex: boxIndex % 3 * 3 + cellIndex % 3,\r\n    }\r\n  },\r\n  getBoxCells(matrix, boxIndex) {\r\n    const startRowIndex = Math.floor(boxIndex / 3) * 3;\r\n    const startColIndex = boxIndex % 3 * 3;\r\n    const result = [];\r\n    for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\r\n      const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\r\n      const colIndex = startColIndex + cellIndex % 3;\r\n      result.push(matrix[rowIndex][colIndex]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n};\r\n\r\nconst matriToolkit = {\r\n  makeRow(v = 0) {\r\n    const array = new Array(9);\r\n    array.fill(v);\r\n    return array;\r\n  },\r\n\r\n  makeMatrix(v = 0) {\r\n    const array = Array.from({ length: 9 }, () => this.makeRow(v));\r\n    return array;\r\n  },\r\n\r\n  // 数组洗牌算法-数组随机排序\r\n  shuffle(array) {\r\n    const endIndex = array.length - 2;\r\n    for (let i = 0; i < endIndex; i++) {\r\n      const j = i + Math.floor(Math.random() * (array.length - i));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  },\r\n\r\n  // 检查制定位置可以填写数字n\r\n  checkFillable(matrix, n, rowIndex, colIndex) {\r\n    const row = matrix[rowIndex];\r\n    const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\r\n    const { boxIndex } = boxToolit.converToBoxIndex(rowIndex, colIndex);\r\n    const box = boxToolit.getBoxCells(matrix, boxIndex);\r\n    for (let i = 0; i < 9; i++) {\r\n      if (row[i] === n || column[i] === n || box[i] === n) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n};\r\n\r\n\r\nmodule.exports = class Toolkit {\r\n\r\n  // 矩阵和数据相关工具\r\n  static get matrix() {\r\n    return matriToolkit;\r\n  };\r\n\r\n  // 宫坐标系相关工具\r\n  static get box() {\r\n    return boxToolit;\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","// 生成数独解决方案\r\nconst Toolkit = require('./toolkit');\r\n\r\nclass Generator {\r\n  gernerate() {\r\n    while (!this.internalGernerate()) {\r\n      console.warn('try again');\r\n    }\r\n  }\r\n\r\n  internalGernerate() {\r\n    // todo入口方案\r\n    this.matrix = Toolkit.matrix.makeMatrix();\r\n    this.orders = this.matrix\r\n      .map(row => row.map((v, i) => i))\r\n      .map(m => Toolkit.matrix.shuffle(m));\r\n    return Toolkit.matrix.makeRow().every((item, i) => this.fillNumber(i + 1));\r\n  }\r\n\r\n  fillNumber(n) {\r\n    return this.fillRow(n, 0);\r\n  }\r\n\r\n  fillRow(n, rowIndex) {\r\n    // 当前行填写成功，递归调用fillRow填写下一行\r\n    if (rowIndex > 8) {\r\n      return true;\r\n    }\r\n\r\n    const row = this.matrix[rowIndex];\r\n    const orders = this.orders[rowIndex];\r\n    for (let i = 0; i < 9; i++) {\r\n      const colIndex = orders[i];\r\n      // 如果这个位置有值\r\n      if (row[colIndex]) {\r\n        continue;\r\n      }\r\n\r\n      // 检查这个位置是否可以填写n\r\n      if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\r\n        continue;\r\n      }\r\n\r\n      row[colIndex] = n;\r\n\r\n      // 去下一行填写n，如没有填进去，就继续寻找当前行下一个位置\r\n      if (!this.fillRow(n, rowIndex + 1)) {\r\n        row[colIndex] = 0;\r\n        continue;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nconst generate = new Generator();\r\ngenerate.gernerate();\r\nconsole.log(generate.matrix);\r\n\r\nmodule.exports = Generator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 3\n// module chunks = 0","// 生成数独游戏\r\n\r\n// 生成完成的解放方案\r\n// 随机去除部分数据--按比例\r\n\r\nconst Generate = require('./generator');\r\n\r\nmodule.exports = class Sudoku {\r\n  constructor() {\r\n    // 生成完成解决方案\r\n    const generator = new Generate();\r\n    generator.gernerate();\r\n    this.solutionMatrix = generator.matrix;\r\n  }\r\n\r\n  make(level = 5) {\r\n    const shouldRid = Math.random() * 9 < level;\r\n    // 生成密盘\r\n    this.puzzleMatrix = this.solutionMatrix.map(row => row.map(cell => {\r\n      return Math.random() * 9 < level ? 0 : cell;\r\n    }));\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}